#pragma version =0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_TactJetton.headers.fc";
#include "tact_TactJetton.stdlib.fc";
#include "tact_TactJetton.storage.fc";

;;
;; Contract TactJetton functions
;;

(int, slice, cell, int) $TactJetton$_contract_init(slice $owner, cell $content) impure inline_ref {
    var (($self'totalSupply, $self'owner, $self'content, $self'mintable)) = (null(), null(), null(), null());
    $self'totalSupply = 0;
    $self'owner = $owner;
    $self'mintable = true;
    $self'content = $content;
    return ($self'totalSupply, $self'owner, $self'content, $self'mintable);
}

((int, slice, cell, int), (cell, cell)) $TactJetton$_fun_getJettonWalletInit((int, slice, cell, int) $self, slice $address) impure inline_ref {
    var (($self'totalSupply, $self'owner, $self'content, $self'mintable)) = $self;
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), $JettonDefaultWallet$_init_child(__tact_context_sys, my_address(), $address));
}

((int, slice, cell, int), ()) $TactJetton$_fun_mint((int, slice, cell, int) $self, slice $to, int $amount, slice $response_destination) impure inline_ref {
    var (($self'totalSupply, $self'owner, $self'content, $self'mintable)) = $self;
    $self'totalSupply = ($self'totalSupply + $amount);
    var ($winit'code, $winit'data) = ($self'totalSupply, $self'owner, $self'content, $self'mintable)~$TactJetton$_fun_getJettonWalletInit($to);
    $global_send($SendParameters$_constructor_to_value_bounce_mode_body_code_data($global_contractAddress(($winit'code, $winit'data)), 0, false, 64, $TokenTransferInternal$_store_cell($TokenTransferInternal$_constructor_queryId_amount_from_response_destination_forward_ton_amount_forward_payload(0, $amount, my_address(), $response_destination, 0, $global_emptySlice())), $winit'code, $winit'data));
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), ());
}

((int, slice, cell, int), ()) $TactJetton$_fun_requireWallet((int, slice, cell, int) $self, slice $owner) impure inline_ref {
    var (($self'totalSupply, $self'owner, $self'content, $self'mintable)) = $self;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    var ($winit'code, $winit'data) = ($self'totalSupply, $self'owner, $self'content, $self'mintable)~$TactJetton$_fun_getJettonWalletInit($owner);
    throw_unless(4429, ( __tact_slice_eq_bits($ctx'sender, $global_contractAddress(($winit'code, $winit'data))) ));
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), ());
}

((int, slice, cell, int), (int, int, slice, cell, cell)) $TactJetton$_fun_get_jetton_data((int, slice, cell, int) $self) impure inline_ref {
    var (($self'totalSupply, $self'owner, $self'content, $self'mintable)) = $self;
    cell $code = $StateInit$_get_code(($self'totalSupply, $self'owner, $self'content, $self'mintable)~$TactJetton$_fun_getJettonWalletInit(my_address()));
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), $JettonData$_constructor_totalSupply_mintable_owner_content_walletCode($self'totalSupply, $self'mintable, $self'owner, $self'content, $code));
}

((int, slice, cell, int), slice) $TactJetton$_fun_get_wallet_address((int, slice, cell, int) $self, slice $owner) impure inline_ref {
    var (($self'totalSupply, $self'owner, $self'content, $self'mintable)) = $self;
    var ($winit'code, $winit'data) = ($self'totalSupply, $self'owner, $self'content, $self'mintable)~$TactJetton$_fun_getJettonWalletInit($owner);
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), $global_contractAddress(($winit'code, $winit'data)));
}

((int, slice, cell, int), ()) $TactJetton$_fun_requireOwner((int, slice, cell, int) $self) impure inline_ref {
    var (($self'totalSupply, $self'owner, $self'content, $self'mintable)) = $self;
    throw_unless(132, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), ());
}

((int, slice, cell, int), slice) $TactJetton$_fun_owner((int, slice, cell, int) $self) impure inline_ref {
    var (($self'totalSupply, $self'owner, $self'content, $self'mintable)) = $self;
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), $self'owner);
}

;;
;; Receivers of a Contract TactJetton
;;

(((int, slice, cell, int)), ()) $TactJetton$_internal_binary_Mint((int, slice, cell, int) $self, (int, int, slice) $msg) impure inline {
    var ($self'totalSupply, $self'owner, $self'content, $self'mintable) = $self;
    var ($msg'queryId, $msg'amount, $msg'receiver) = $msg;
    ($self'totalSupply, $self'owner, $self'content, $self'mintable)~$TactJetton$_fun_requireOwner();
    throw_unless(26288, $self'mintable);
    ($self'totalSupply, $self'owner, $self'content, $self'mintable)~$TactJetton$_fun_mint($msg'receiver, $msg'amount, $self'owner);
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), ());
}

((int, slice, cell, int), ()) $TactJetton$_internal_text_b799a80915ad4efa25b9ae44c6c83c5e63dfed5d8901af1c49e5717d61f95490((int, slice, cell, int) $self) impure inline {
    var ($self'totalSupply, $self'owner, $self'content, $self'mintable) = $self;
    ($self'totalSupply, $self'owner, $self'content, $self'mintable)~$TactJetton$_fun_requireOwner();
    $self'mintable = false;
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), ());
}

((int, slice, cell, int), ()) $TactJetton$_internal_text_527fae00c96c18398b99d3bf22e9cb372f2f4901133cf9815b919043359192ac((int, slice, cell, int) $self) impure inline {
    var ($self'totalSupply, $self'owner, $self'content, $self'mintable) = $self;
    ($self'totalSupply, $self'owner, $self'content, $self'mintable)~$TactJetton$_fun_requireOwner();
    $self'mintable = true;
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), ());
}

(((int, slice, cell, int)), ()) $TactJetton$_internal_binary_TokenUpdateContent((int, slice, cell, int) $self, (int, cell) $msg) impure inline {
    var ($self'totalSupply, $self'owner, $self'content, $self'mintable) = $self;
    var ($msg'queryId, $msg'content) = $msg;
    ($self'totalSupply, $self'owner, $self'content, $self'mintable)~$TactJetton$_fun_requireOwner();
    $self'content = $msg'content;
    ($self'totalSupply, $self'owner, $self'content, $self'mintable)~$TactJetton$_fun_reply($TokenExcesses$_store_cell($TokenExcesses$_constructor_queryId($msg'queryId)));
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), ());
}

(((int, slice, cell, int)), ()) $TactJetton$_internal_binary_TokenBurnNotification((int, slice, cell, int) $self, (int, int, slice, slice) $msg) impure inline {
    var ($self'totalSupply, $self'owner, $self'content, $self'mintable) = $self;
    var ($msg'queryId, $msg'amount, $msg'owner, $msg'response_destination) = $msg;
    ($self'totalSupply, $self'owner, $self'content, $self'mintable)~$TactJetton$_fun_requireWallet($msg'owner);
    $self'totalSupply = ($self'totalSupply - $msg'amount);
    if ((~ null?($msg'response_destination))) {
        $global_send($SendParameters$_constructor_to_value_bounce_mode_body(__tact_not_null($msg'response_destination), 0, false, (64 + 2), $TokenExcesses$_store_cell($TokenExcesses$_constructor_queryId($msg'queryId))));
    }
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), ());
}

(((int, slice, cell, int)), ()) $TactJetton$_internal_binary_Deploy((int, slice, cell, int) $self, (int) $deploy) impure inline {
    var ($self'totalSupply, $self'owner, $self'content, $self'mintable) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'totalSupply, $self'owner, $self'content, $self'mintable)~$TactJetton$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'totalSupply, $self'owner, $self'content, $self'mintable), ());
}

;;
;; Get methods of a Contract TactJetton
;;

_ %get_jetton_data() method_id(106029) {
    var self = $TactJetton$_contract_load();
    var res = self~$TactJetton$_fun_get_jetton_data();
    return $JettonData$_to_external(res);
}

_ %get_wallet_address(slice $$owner) method_id(103289) {
    slice $owner = __tact_verify_address($$owner);
    var self = $TactJetton$_contract_load();
    var res = self~$TactJetton$_fun_get_wallet_address($owner);
    return res;
}

_ %owner() method_id(83229) {
    var self = $TactJetton$_contract_load();
    var res = self~$TactJetton$_fun_owner();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.jetton.master"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmWpaVMYtihumBAUjTU2grVP7X9RhUiB7Ee79car1esNe1";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract TactJetton
;;

((int, slice, cell, int), int) $TactJetton$_contract_router_internal((int, slice, cell, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive Mint message
    if (op == 529572074) {
        var msg = in_msg~$Mint$_load();
        self~$TactJetton$_internal_binary_Mint(msg);
        return (self, true);
    }
    
    ;; Receive TokenUpdateContent message
    if (op == 4) {
        var msg = in_msg~$TokenUpdateContent$_load();
        self~$TactJetton$_internal_binary_TokenUpdateContent(msg);
        return (self, true);
    }
    
    ;; Receive TokenBurnNotification message
    if (op == 2078119902) {
        var msg = in_msg~$TokenBurnNotification$_load();
        self~$TactJetton$_internal_binary_TokenBurnNotification(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$TactJetton$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "stop_minting" message
        if (text_op == 0xb799a80915ad4efa25b9ae44c6c83c5e63dfed5d8901af1c49e5717d61f95490) {
            self~$TactJetton$_internal_text_b799a80915ad4efa25b9ae44c6c83c5e63dfed5d8901af1c49e5717d61f95490();
            return (self, true);
        }
        
        ;; Receive "resume_minting" message
        if (text_op == 0x527fae00c96c18398b99d3bf22e9cb372f2f4901133cf9815b919043359192ac) {
            self~$TactJetton$_internal_text_527fae00c96c18398b99d3bf22e9cb372f2f4901133cf9815b919043359192ac();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $TactJetton$_contract_load();
    
    ;; Handle operation
    int handled = self~$TactJetton$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $TactJetton$_contract_store(self);
}
